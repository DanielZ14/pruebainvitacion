---
// pages/lista-confirmados.astro
import { db } from "../lib/firebase";
import { collection, getDocs, query, where, doc, getDoc } from "firebase/firestore";

interface InvitadoConfirmado {
    id: string;
    nombre: string;
    mesa: string;
    pasesConfirmados: number;
}

const invitadosConfirmados: InvitadoConfirmado[] = [];
let errorCarga = false;

try {
    // 1. Get all confirmations where asistencia is true
    const qConfirmaciones = query(collection(db, "confirmaciones"), where("asistencia", "==", true));
    const querySnapshotConfirmaciones = await getDocs(qConfirmaciones);

    // 2. For each confirmation, get the corresponding invitado data
    for (const docConfirmacion of querySnapshotConfirmaciones.docs) {
        const confirmacionData = docConfirmacion.data();
        const invitadoId = docConfirmacion.id;

        const docRefInvitado = doc(db, "invitados", invitadoId);
        const docSnapInvitado = await getDoc(docRefInvitado);

        if (docSnapInvitado.exists()) {
            const invitadoData = docSnapInvitado.data();
            invitadosConfirmados.push({
                id: invitadoId,
                nombre: invitadoData.nombre,
                mesa: invitadoData.mesa,
                pasesConfirmados: confirmacionData.asistentes || 0,
            });
        } else {
            console.warn(`Invitado not found for confirmation ID: ${invitadoId}`);
        }
    }
    // Sort the array
    invitadosConfirmados.sort((a, b) => a.nombre.localeCompare(b.nombre));

} catch (error) {
    console.error("Error fetching data:", error);
    errorCarga = true;
}
---

<html lang="es">
<head>
    <title>Lista de Invitados Confirmados</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 font-sans p-4">
    <div class="max-w-7xl mx-auto">
        <h1 class="text-2xl font-bold mb-6 text-center">Lista de Invitados Confirmados</h1>

        {errorCarga && (
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Error:</strong>
                <span class="block sm:inline">Hubo un problema al cargar los datos. Por favor, recarga la página.</span>
            </div>
        )}

        {!errorCarga && (
            <>
                <div class="mb-4">
                    <div class="relative">
                        <input
                            type="text"
                            id="searchInput"
                            placeholder="Buscar por nombre..."
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        />
                        <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="overflow-x-auto bg-white rounded-lg shadow">
                    <table class="min-w-full">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-blue-500 uppercase tracking-wider">Mesa</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Pases Confirmados</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200" id="invitadosTableBody">
                            {invitadosConfirmados.map((invitado) => (
                                <tr>
                                    <td class="px-4 py-3 whitespace-nowrap">{invitado.nombre}</td>
                                    <td class="px-4 text-blue-700 text-lg font-medium py-3 whitespace-nowrap">{invitado.mesa ?? '-'}</td>
                                    <td class="px-4 py-3 whitespace-nowrap">{invitado.pasesConfirmados}</td>
                                    <td class="px-4 py-3 whitespace-nowrap font-mono text-sm">{invitado.id}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                    {invitadosConfirmados.length === 0 && (
                        <p class="text-center text-gray-500 py-4">No hay invitados confirmados.</p>
                    )}
                </div>
            </>
        )}
    </div>

    <script>
        // Función para filtrar la tabla
        function filterTable() {
            const searchInput = document.getElementById('searchInput');
            const filter = searchInput.value.toLowerCase();
            const tbody = document.getElementById('invitadosTableBody');
            const rows = tbody.getElementsByTagName('tr');

            for (let row of rows) {
                const nameCell = row.cells[0];
                const name = nameCell.textContent || nameCell.innerText;
                if (name.toLowerCase().includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        }

        // Agregar event listener al input de búsqueda
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', filterTable);
            }
        });
    </script>
</body>
</html>