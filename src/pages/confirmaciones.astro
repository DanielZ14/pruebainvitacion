---
// pages/confirmaciones.astro
import { db } from "../lib/firebase";
import { collection, getDocs, query, orderBy } from "firebase/firestore";
import Chart from 'chart.js/auto'; // Importa Chart.js

// --- Autenticación (SIMPLIFICADA - ¡NO USAR EN PRODUCCIÓN!) ---
const contrasenaCorrecta = "contrasenaSuperSecreta"; // ¡CAMBIA ESTO! - MUY IMPORTANTE
const contrasenaIngresada = Astro.url.searchParams.get("pass");

if (contrasenaIngresada !== contrasenaCorrecta) {
    return new Response("Acceso denegado", { status: 403 }); // Forbidden
}
// --- Fin Autenticación Simplificada ---

// --- Obtener las confirmaciones ---
const confirmaciones = [];
let totalAsistentes = 0;
let totalNoAsistentes = 0;
let totalAsistentesConfirmados = 0;

try {
  const q = query(collection(db, "confirmaciones"), orderBy("timestamp", "desc"));
  const querySnapshot = await getDocs(q);
  querySnapshot.forEach((doc) => {
    const data = doc.data();
    confirmaciones.push(data);

    // Calcula estadísticas
    if (data.asistencia) {
      totalAsistentes++;
    } else {
      totalNoAsistentes++;
    }
	if(data.asistentesConfirmados){
		totalAsistentesConfirmados += parseInt(data.asistentesConfirmados);
	} else {
        totalAsistentesConfirmados += 0;
    }

  });
} catch (e) {
  console.error("Error al consultar confirmaciones:", e);
  // Considera mostrar un mensaje de error al usuario en la página, no solo en la consola.
}

// Preparar datos para los gráficos (Chart.js)
const asistenciaData = {
  labels: ['Asistirán', 'No Asistirán'],
  datasets: [{
    label: 'Confirmaciones',
    data: [totalAsistentes, totalNoAsistentes],
    backgroundColor: [
      'rgba(75, 192, 192, 0.5)', // Verde azulado
      'rgba(255, 99, 132, 0.5)', // Rojo
    ],
    borderColor: [
      'rgba(75, 192, 192, 1)',
      'rgba(255, 99, 132, 1)',
    ],
    borderWidth: 1
  }]
};

// Puedes agregar más datasets para otros gráficos (ej., asistentes confirmados por evento)

---

<html lang="es">
<head>
  <title>Lista de Confirmaciones</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    /* Estilos adicionales si necesitas algo que no esté en Tailwind */
  </style>
</head>
<body class="bg-gray-100 font-sans">
  <div class="container mx-auto p-8">
    <h1 class="text-3xl font-bold mb-6 text-center">Confirmaciones de Asistencia</h1>

	<div class="mb-8 grid grid-cols-1 md:grid-cols-3 gap-6">
	  <div class="bg-white rounded-lg shadow p-6">
		  <h2 class="text-xl font-semibold mb-2">Pases Confirmados</h2>
		  <p class="text-4xl font-bold text-green-600">{totalAsistentesConfirmados}</p>
		</div>
	    <div class="bg-white rounded-lg shadow p-6">
		  <h2 class="text-xl font-semibold mb-2">Total de Respuestas</h2>
		  <p class="text-4xl font-bold text-blue-600">{confirmaciones.length}</p>
		</div>

		<div class="bg-white rounded-lg shadow p-6">
        	<h2 class="text-xl font-semibold mb-2">Personas que NO Asistirán</h2>
        	<p class="text-4xl font-bold text-red-500">{totalNoAsistentes}</p>
      </div>
		
	</div>



    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
      <div class="bg-white rounded-lg shadow p-4">
        <canvas id="asistenciaChart"></canvas>
      </div>
       </div>

    <div class="bg-white rounded-lg shadow overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Asistencia</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha/Hora</th>
			<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Asistentes Confirmados</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {confirmaciones.map((confirmacion) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.nombre}</td>
              <td class="px-6 py-4 whitespace-nowrap">
                {confirmacion.asistencia ? (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Sí</span>
                ) : (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">No</span>
                )}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.timestamp ? confirmacion.timestamp.toDate().toLocaleString() : ''}</td>
			  <td class="px-6 py-4 whitespace-nowrap">{confirmacion.asistentesConfirmados}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>

  <script type="module">
    import Chart from 'chart.js/auto';
    const ctxAsistencia = document.getElementById('asistenciaChart').getContext('2d');
    new Chart(ctxAsistencia, {
      type: 'pie', //  o 'bar', 'doughnut', etc.
      data: {
        labels: ['Asistirán', 'No Asistirán'],
        datasets: [{
          label: 'Confirmaciones',
          data: [!{totalAsistentes}, !{totalNoAsistentes}],
          backgroundColor: [
            'rgba(75, 192, 192, 0.5)', // Verde azulado
            'rgba(255, 99, 132, 0.5)', // Rojo
          ],
          borderColor: [
            'rgba(75, 192, 192, 1)',
            'rgba(255, 99, 132, 1)',
          ],
          borderWidth: 1
        }]
      },
      options: {
        plugins: {
            title: {
                display: true,
                text: 'Asistencia vs No asistencia'
            }
		}
      }
    });

  </script>
</body>
</html>