---
// pages/confirmaciones.astro
import { db } from "../lib/firebase";
import { collection, getDocs, query, orderBy, doc, getDoc } from "firebase/firestore";

// --- Autenticación (SIMPLIFICADA - ¡NO USAR EN PRODUCCIÓN!) ---
const contrasenaCorrecta = "contrasenaSuperSecreta"; // ¡CAMBIA ESTO!
const contrasenaIngresada = Astro.url.searchParams.get("pass");

if (contrasenaIngresada !== contrasenaCorrecta) {
    return new Response("Acceso denegado", { status: 403 });
}
// --- Fin Autenticación Simplificada ---

// --- Obtener las confirmaciones ---
const confirmaciones = [];
let totalAsistentes = 0;
let totalNoAsistentes = 0;
let totalAsistentesConfirmados = 0;
let totalPasesLibres = 0; // Initialize totalPasesLibres
let errorCarga = false;


try {
    const qConfirmaciones = query(collection(db, "confirmaciones"), orderBy("timestamp", "desc"));
    const querySnapshotConfirmaciones = await getDocs(qConfirmaciones);

      for (const docConfirmacion of querySnapshotConfirmaciones.docs) {
        const dataConfirmacion = docConfirmacion.data();
        confirmaciones.push(dataConfirmacion);


        // Calcula estadísticas
        if (dataConfirmacion.asistencia) {
            totalAsistentes++;
        } else {
            totalNoAsistentes++;
        }

        // Calculate pasesLibres *always*, but conditionally subtract
        if (typeof dataConfirmacion.pases === 'number') { // Ensure pases is a number
            if (dataConfirmacion.asistencia && typeof dataConfirmacion.asistentesConfirmados === 'number') {
                totalPasesLibres += dataConfirmacion.pases - dataConfirmacion.asistentesConfirmados;
            } else if (!dataConfirmacion.asistencia) {
                // If they decline, *all* their passes are free
                totalPasesLibres += dataConfirmacion.pases;
            }
        }


        if(dataConfirmacion.asistentesConfirmados){
            totalAsistentesConfirmados += parseInt(dataConfirmacion.asistentesConfirmados);
        } else {
            totalAsistentesConfirmados += 0;
        }
    }

} catch (e) {
    console.error("Error al consultar confirmaciones/invitados:", e);
    errorCarga = true;
}

// Calcula el porcentaje de no asistentes.
const porcentajeNoAsistentes = confirmaciones.length > 0 ? (totalNoAsistentes / confirmaciones.length) * 100 : 0;
const porcentajeAsistentes = 100 - porcentajeNoAsistentes;

//Helper function to format the date
function formatDate(timestamp) {
    if (!timestamp) {
        return '-'; // Or any other suitable placeholder
    }
    const date = timestamp.toDate();
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed
    const year = date.getFullYear();
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');

    return `${day}/${month}/${year}, ${hours}:${minutes}`;
}
---

<html lang="es">
<head>
  <title>Lista de Confirmaciones</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    /* Estilos para el gráfico circular */
    .pie-chart-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }

    .pie-chart {
      width: 200px; /* Ajusta según necesites. */
      height: 200px;
      border-radius: 50%;
      background-image: conic-gradient(
          #F44336 0deg,
          #F44336 var(--no-asistentes-deg),
          #4CAF50 var(--no-asistentes-deg),
          #4CAF50 360deg
      );
    }

    .pie-chart-label {
        text-align: center;
        font-size: 1.2em;
        font-weight: bold;
        margin-top: 0.5rem;
    }

    /* Contenedor para la leyenda */
    .legend {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
        gap: 20px;
    }

    .legend-item {
        display: flex;
        align-items: center;
    }

    .legend-color {
        width: 15px;
        height: 15px;
        margin-right: 5px;
    }

    .legend-color.red {
        background-color: #F44336;
    }
    .legend-color.green {
        background-color: #4CAF50;
    }

      /* Media query para dispositivos móviles */
    @media (max-width: 768px) {
        .pie-chart {
          width: 150px;
          height: 150px;
        }
        .pie-chart-label{
            font-size: 1em;
        }
        .legend {
          flex-direction: column;
          align-items: center;
        }
    }
  </style>
</head>
<body class="bg-gray-100 font-sans">
  <div class="container mx-auto p-8">
    <h1 class="text-3xl font-bold mb-6 text-center">Confirmaciones de Asistencia Boda Silvia & Christian</h1>

    {errorCarga && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <strong class="font-bold">Error:</strong>
        <span class="block sm:inline">Hubo un problema al cargar los datos. Por favor, recarga la página.</span>
      </div>
    )}

    <div class="mb-8 grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="bg-white rounded-lg shadow p-6 text-center">
        <h2 class="text-xl font-semibold mb-2">Total de Respuestas</h2>
        <p class="text-4xl font-bold text-blue-600">{confirmaciones.length}</p>
      </div>
      <div class="bg-white rounded-lg shadow p-6 text-center">
        <h2 class="text-xl font-semibold mb-2">Pases Confirmados</h2>
        <p class="text-4xl font-bold text-green-600">{totalAsistentesConfirmados}</p>
      </div>
      <div class="bg-white rounded-lg shadow p-6 text-center">
            <h2 class="text-xl font-semibold mb-2">Personas que NO Asistirán</h2>
            <p class="text-4xl font-bold text-red-500">{totalNoAsistentes}</p>
        </div>
      <div class="bg-white rounded-lg shadow p-6 text-center">
        <h2 class="text-xl font-semibold mb-2">Pases Libres</h2>
        <p class="text-4xl font-bold text-indigo-600">{totalPasesLibres}</p>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
      <div class="bg-white rounded-lg shadow p-4">
        <div class="pie-chart-container">
          <div class="pie-chart" style={`--no-asistentes-deg: ${porcentajeNoAsistentes * 3.6}deg;`}>
          </div>
        </div>
        <div class="pie-chart-label">{porcentajeAsistentes.toFixed(1)}%</div>

          <div class="legend">
              <div class="legend-item">
                  <div class="legend-color green"></div>
                  <div>Asistirán</div>
              </div>
              <div class="legend-item">
                  <div class="legend-color red"></div>
                  <div>No Asistirán</div>
              </div>
          </div>

      </div>
    </div>

    <div class="bg-white rounded-lg shadow overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Asistencia</th>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Pases Confirmados</th>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Pases Otorgados</th>
             <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha/Hora</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {confirmaciones.map((confirmacion) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.nombre}</td>
              <td class="px-6 py-4 whitespace-nowrap text-center">
                {confirmacion.asistencia ? (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Sí</span>
                ) : (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">No</span>
                )}
              </td>

              <td class="px-6 py-4 whitespace-nowrap text-center">{confirmacion.asistentesConfirmados ?? 0}</td>
              <td class="px-6 py-4 whitespace-nowrap text-center">
                {typeof confirmacion.pases === 'number' ? confirmacion.pases : '-'}
              </td>
                <td class="px-6 py-4 whitespace-nowrap">{formatDate(confirmacion.timestamp)}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</body>
</html>