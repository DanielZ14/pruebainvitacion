---
// pages/confirmaciones.astro
import { db } from "../lib/firebase";
import { collection, getDocs, query, orderBy } from "firebase/firestore";

// --- Autenticación (SIMPLIFICADA - ¡NO USAR EN PRODUCCIÓN!) ---
const contrasenaCorrecta = "contrasenaSuperSecreta"; // ¡CAMBIA ESTO! - MUY IMPORTANTE
const contrasenaIngresada = Astro.url.searchParams.get("pass");

if (contrasenaIngresada !== contrasenaCorrecta) {
    return new Response("Acceso denegado", { status: 403 }); // Forbidden
}
// --- Fin Autenticación Simplificada ---

// --- Obtener las confirmaciones ---
const confirmaciones = [];
let totalAsistentes = 0;
let totalNoAsistentes = 0;
let totalAsistentesConfirmados = 0;
let errorCarga = false; // Variable para controlar si hubo un error

try {
  const q = query(collection(db, "confirmaciones"), orderBy("timestamp", "desc"));
  const querySnapshot = await getDocs(q);
  querySnapshot.forEach((doc) => {
    const data = doc.data();
    confirmaciones.push(data);

    // Calcula estadísticas
    if (data.asistencia) {
      totalAsistentes++;
    } else {
      totalNoAsistentes++;
    }
    if(data.asistentesConfirmados){
        totalAsistentesConfirmados += parseInt(data.asistentesConfirmados);
    } else {
        totalAsistentesConfirmados += 0;
    }
  });
} catch (e) {
  console.error("Error al consultar confirmaciones:", e);
  errorCarga = true; // Marca que hubo un error
}

// No es necesario preparar datos especiales para Google Charts aquí; lo haremos en el script.

---

<html lang="es">
<head>
  <title>Lista de Confirmaciones</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    /* Estilos adicionales si necesitas algo que no esté en Tailwind */
    #piechart { /* Añade un poco de estilo para centrar el gráfico */
        width: 100%;
        max-width: 500px; /* O el tamaño que desees */
        margin: 0 auto;
    }

  </style>
</head>
<body class="bg-gray-100 font-sans">
  <div class="container mx-auto p-8">
    <h1 class="text-3xl font-bold mb-6 text-center">Confirmaciones de Asistencia</h1>

    {errorCarga && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <strong class="font-bold">Error:</strong>
        <span class="block sm:inline">Hubo un problema al cargar los datos. Por favor, recarga la página.</span>
      </div>
    )}


  <div class="mb-8 grid grid-cols-1 md:grid-cols-3 gap-6">
    <div class="bg-white rounded-lg shadow p-6">
      <h2 class="text-xl font-semibold mb-2">Pases Confirmados</h2>
      <p class="text-4xl font-bold text-green-600">{totalAsistentesConfirmados}</p>
    </div>
      <div class="bg-white rounded-lg shadow p-6">
      <h2 class="text-xl font-semibold mb-2">Total de Respuestas</h2>
      <p class="text-4xl font-bold text-blue-600">{confirmaciones.length}</p>
    </div>

    <div class="bg-white rounded-lg shadow p-6">
          <h2 class="text-xl font-semibold mb-2">Personas que NO Asistirán</h2>
          <p class="text-4xl font-bold text-red-500">{totalNoAsistentes}</p>
      </div>

  </div>



    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
        <div id="piechart" class="bg-white rounded-lg shadow p-4"></div>
    </div>

    <div class="bg-white rounded-lg shadow overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Asistencia</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha/Hora</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Asistentes Confirmados</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {confirmaciones.map((confirmacion) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.nombre}</td>
              <td class="px-6 py-4 whitespace-nowrap">
                {confirmacion.asistencia ? (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Sí</span>
                ) : (
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">No</span>
                )}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.timestamp ? confirmacion.timestamp.toDate().toLocaleString() : ''}</td>
              <td class="px-6 py-4 whitespace-nowrap">{confirmacion.asistentesConfirmados}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>


    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            // Prepara los datos *dentro* de la función drawChart.
            // Usa JSON.stringify para pasar los datos de Astro a JavaScript.
            var data = google.visualization.arrayToDataTable([
                ['Asistencia', 'Cantidad'], // Encabezados de columna
                ['Asistirán',     !{JSON.stringify(totalAsistentes)}],
                ['No Asistirán',  !{JSON.stringify(totalNoAsistentes)}]
            ]);

            var options = {
                title: 'Asistencia vs No asistencia',
                //is3D: true,  // Opcional: Para un gráfico 3D
                pieHole: 0.4, // Opcional: Para un gráfico de dona (donut)
                colors: ['#4CAF50', '#F44336'], // Colores personalizados (verde, rojo)
                // Puedes agregar más opciones de personalización aquí
            };


            // Dibuja el gráfico *solo si no hubo errores*.
            if (!{JSON.stringify(errorCarga)}) {
                var chart = new google.visualization.PieChart(document.getElementById('piechart'));
                chart.draw(data, options);
            }
            else {
                //Opcional. Si hay error no se muestra el grafico
                document.getElementById("piechart").innerHTML = "<p>No se pudo cargar el gráfico.</p>";
            }
        }
    </script>
</body>
</html>