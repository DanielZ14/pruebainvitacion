---
// src/pages/invitado/[id].astro
export const prerender = false; // Desactivar prerenderizado

import { db } from "../../lib/firebase.js"; // Ajusta la ruta si es necesario
import { doc, getDoc, setDoc } from "firebase/firestore";
import ConfirmacionAsistencia from '../../components/ConfirmacionAsistencia.astro';

const { id } = Astro.params;

let invitado = {};
let yaConfirmo = false;
let asistenciaPrevia = null;

// Cargar datos del invitado
if (id) {
  try {
    // DELAY the fetch call
    setTimeout(async () => { // Wrap in setTimeout
      const response = await fetch('/data/invitados.json');
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const invitados = await response.json();
      invitado = invitados.find(inv => inv.id.toString() === id) || {};
      console.log("Invitado encontrado:", invitado); // Keep this log
    }, 200); // Delay for 200 milliseconds (adjust as needed)

  } catch (error) {
    console.error("Error loading guest data:", error);
    invitado = {};
  }


  // Verificar confirmación previa
  try {
    const docRef = doc(db, "confirmaciones", id);
    const docSnap = await getDoc(docRef);
    if (docSnap.exists()) {
      yaConfirmo = true;
      asistenciaPrevia = docSnap.data().asistencia;
    }
  } catch (error) {
    console.error("Error fetching confirmation:", error);
  }
}

// Manejar el envío del formulario (POST)
if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const confirma = data.get("confirma");

  try {
    const docRef = doc(db, "confirmaciones", id); // Usar el ID del invitado

    await setDoc(docRef, {
      nombre: invitado.nombre, // Usa el nombre del objeto invitado
      asistencia: confirma,
      timestamp: new Date(),
    }, { merge: true });

    // Redireccionar después de guardar, para evitar reenvíos
    return Astro.redirect(`/invitado/${id}?confirmacion=true`);

  } catch (error) {
    console.error("Error saving confirmation:", error);
      return Astro.redirect(`/invitado/${id}?confirmacion=false`); //Redirecciona en caso de error.
  }
}
---

<html lang="es">
<head>
   {invitado && invitado.nombre && <title>Invitación de {invitado.nombre}</title>}
  <meta charset="utf-8" />
</head>
<body>
  <h1>¡Estás invitado/a!</h1>

  {invitado && invitado.nombre && (
    <>
      <p>Nombre: {invitado.nombre}</p>
      <p>Pases: {invitado.pases}</p>
      <p>Mesa: {invitado.mesa}</p>
    </>
  )}

{/* Muestra mensaje de confirmación/error *después* del POST, usando un parámetro en la URL */}
  {Astro.url.searchParams.get('confirmacion') === 'true' && (
    <p>¡Gracias por confirmar tu asistencia!</p>
  )}
   {Astro.url.searchParams.get('confirmacion') === 'false' && (
      <p>
        Hubo un error al confirmar tu asistencia, intentalo de nuevo
      </p>
    )}

  {!yaConfirmo ? (
    <ConfirmacionAsistencia idInvitado={id} nombreInvitado={invitado.nombre} />
  ) : (
    <p>
      Ya confirmaste tu asistencia. {asistenciaPrevia === 'si' ? '¡Nos vemos en la boda!' : '¡Lamentamos que no puedas asistir!'}
    </p>
  )}
</body>
</html>